[build-system]
requires = ["setuptools>=45", "setuptools-scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nessai-gw"
authors = [
    {name = "Michael J. Williams", email = "michaeljw1@googlemail.com"},
]
description = "Gravitational-wave reparameterisations and proposals for nessai"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = [
    "nested sampling",
    "normalizing flows",
    "machine learning",
]
dependencies = [
    "nessai>=0.14.0",
    "numpy",
    "scipy",
]
dynamic = [
    "version",
]

[project.urls]
"Homepage" = "https://github.com/mj-will/nessai-gw"


[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-rerunfailures",
    "pytest-integration",
    "pytest-requires",
]
bilby = [
    "bilby",
    "nessai-bilby",
    "lalsuite",
    "astropy",
]

[tool.setuptools_scm]
version_scheme = "release-branch-semver"

[project.entry-points."nessai.proposals"]
gwflowproposal = "nessai_gw.proposals:GWFlowProposal"
augmentedgwflowproposal = "nessai_gw.proposals:AugmentedGWFlowProposal"
clusteringgwflowproposal = "nessai_gw.proposals:ClusteringGWFlowProposal"
mcmcgwflowproposal = "nessai_gw.proposals:MCMCGWFlowProposal"
lisaflowproposal = "nessai_gw.proposals:LISAFlowProposal"
mcmclisaflowproposal = "nessai_gw.proposals:MCMCLISAFlowProposal"

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--cov=nessai-gw",
    "--import-mode=importlib",
]
testpaths = [
    "tests"
]

[tool.coverage.run]
source = [
    "src/nessai-gw"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
extend-select = ["I"]
